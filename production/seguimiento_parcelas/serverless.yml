service: seguimiento-parcelas
provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  timetout: 30
  environment:
    DB_HOST: production-ever-green.csif2sx3kogz.us-east-1.rds.amazonaws.com
    DB_PORT: 5432
    DB_NAME: productionevergreen
    DB_USER: postgres
    DB_PASSWORD: 12345678

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "ec2:CreateNetworkInterface"
      Resource: "*"

    - Effect: "Allow"
      Action:
        - "rds-db:connect"
      Resource: "*"

custom:
  pythonRequirements:
    dockerizePip: true
    useDownloadCache: true
    useStaticCache: true
    layer:
      name: ${self:service}-python-libraries

functions:
  seguimientoParcelasGet:
    handler: controllers/seguimiento_parcelas_get.handler
    events:
      - http:
          path: seguimiento_parcelas
          method: get
    layers:
      - Ref: PythonRequirementsLambdaLayer
  seguimientoParcelasPost:
    handler: controllers/seguimiento_parcelas_post.handler
    events:
      - http:
          path: seguimiento_parcelas
          method: post
    layers:
      - Ref: PythonRequirementsLambdaLayer
  seguimientoParcelasPut:
    handler: controllers/seguimiento_parcelas_put.handler
    events:
      - http:
          path: seguimiento_parcelas
          method: put
    layers:
      - Ref: PythonRequirementsLambdaLayer
  seguimientoParcelasDelete:
    handler: controllers/seguimiento_parcelas_delete.handler
    events:
      - http:
          path: seguimiento_parcelas
          method: delete
    layers:
      - Ref: PythonRequirementsLambdaLayer

plugins:
  - serverless-python-requirements
  - serverless-offline
